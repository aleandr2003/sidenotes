//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SideNotes.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Comment {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Comment() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SideNotes.Resources.Comment", typeof(Comment).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ответить ähnelt.
        /// </summary>
        public static string AddCommentHeading {
            get {
                return ResourceManager.GetString("AddCommentHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Сохранить ähnelt.
        /// </summary>
        public static string AddCommentSaveButtonText {
            get {
                return ResourceManager.GetString("AddCommentSaveButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Добавить комментарий ähnelt.
        /// </summary>
        public static string AddHeadHeading {
            get {
                return ResourceManager.GetString("AddHeadHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Добавить скрытым ähnelt.
        /// </summary>
        public static string AddHeadHiddenHeading {
            get {
                return ResourceManager.GetString("AddHeadHiddenHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Сохранить ähnelt.
        /// </summary>
        public static string AddHeadSaveButtonText {
            get {
                return ResourceManager.GetString("AddHeadSaveButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Никто не комментировал ähnelt.
        /// </summary>
        public static string CommentatorsListNoCommentsMessage {
            get {
                return ResourceManager.GetString("CommentatorsListNoCommentsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die удален ähnelt.
        /// </summary>
        public static string CommentRemoved {
            get {
                return ResourceManager.GetString("CommentRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die удалить ähnelt.
        /// </summary>
        public static string CommentTreeNodeDeleteButtonText {
            get {
                return ResourceManager.GetString("CommentTreeNodeDeleteButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ответить ähnelt.
        /// </summary>
        public static string CommentTreeNodeReplyLinkText {
            get {
                return ResourceManager.GetString("CommentTreeNodeReplyLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Метки можно добавлять только к параграфам ähnelt.
        /// </summary>
        public static string ControllerCantAddMark {
            get {
                return ResourceManager.GetString("ControllerCantAddMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die комментарий не найден ähnelt.
        /// </summary>
        public static string ControllerCommentNotFound {
            get {
                return ResourceManager.GetString("ControllerCommentNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Комментарий удален ähnelt.
        /// </summary>
        public static string ControllerCommentRemoved {
            get {
                return ResourceManager.GetString("ControllerCommentRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Нужно залогиниться ähnelt.
        /// </summary>
        public static string ControllerNeedLogin {
            get {
                return ResourceManager.GetString("ControllerNeedLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Только автор может удалить свой комментарий ähnelt.
        /// </summary>
        public static string ControllerNoPermissionToDeleteComment {
            get {
                return ResourceManager.GetString("ControllerNoPermissionToDeleteComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Нет такого типа комментариев ähnelt.
        /// </summary>
        public static string ControllerUnknownCommentType {
            get {
                return ResourceManager.GetString("ControllerUnknownCommentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die такой тип фильтра не поддерживается ähnelt.
        /// </summary>
        public static string ControllerUnknownFilterType {
            get {
                return ResourceManager.GetString("ControllerUnknownFilterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Такой тип меток не поддерживается ähnelt.
        /// </summary>
        public static string ControllerUnknownMarkType {
            get {
                return ResourceManager.GetString("ControllerUnknownMarkType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Комментарии ähnelt.
        /// </summary>
        public static string HeadIndexHeading {
            get {
                return ResourceManager.GetString("HeadIndexHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die удалить ähnelt.
        /// </summary>
        public static string IndexDeleteButtonText {
            get {
                return ResourceManager.GetString("IndexDeleteButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Комментарии ähnelt.
        /// </summary>
        public static string IndexHeading {
            get {
                return ResourceManager.GetString("IndexHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ещё {0} комментов ähnelt.
        /// </summary>
        public static string IndexMoreCommentsLinkText {
            get {
                return ResourceManager.GetString("IndexMoreCommentsLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ответить ähnelt.
        /// </summary>
        public static string IndexReplyLinkText {
            get {
                return ResourceManager.GetString("IndexReplyLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Все ähnelt.
        /// </summary>
        public static string ParagraphCommentFilterAllCommentsLinkText {
            get {
                return ResourceManager.GetString("ParagraphCommentFilterAllCommentsLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Звезды ähnelt.
        /// </summary>
        public static string ParagraphCommentFilterCelebsCommentsLinkText {
            get {
                return ResourceManager.GetString("ParagraphCommentFilterCelebsCommentsLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Друзья ähnelt.
        /// </summary>
        public static string ParagraphCommentFilterFriendsCommentsLinkText {
            get {
                return ResourceManager.GetString("ParagraphCommentFilterFriendsCommentsLinkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ответить на комментарий ähnelt.
        /// </summary>
        public static string ReplyHeading {
            get {
                return ResourceManager.GetString("ReplyHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ответить на комментарий ähnelt.
        /// </summary>
        public static string ReplyTitle {
            get {
                return ResourceManager.GetString("ReplyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Пользователь не найден ähnelt.
        /// </summary>
        public static string UserNotFound {
            get {
                return ResourceManager.GetString("UserNotFound", resourceCulture);
            }
        }
    }
}
