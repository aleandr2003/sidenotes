@model EditBookModel
@{
    ViewBag.Title = SideNotes.Resources.BookAdmin.EditBookTitle +" '" + Model.Title + "'";
}
<div id="main">
<h2>@SideNotes.Resources.BookAdmin.EditBookHeading '@Model.Title'</h2>
@Html.ActionLink(SideNotes.Resources.BookAdmin.EditBookToIndexLinkText, "Index")
@using (Html.BeginForm<BookAdminController>(x => x.EditBook(null), FormMethod.Post))
  {
		<fieldset>
            @Html.LabelFor(x => x.Annotation, SideNotes.Resources.BookAdmin.EditBookFieldLabelAnnotation)
			@Html.TextAreaFor(x => x.Annotation, new { value = Model.Annotation, cols=50, rows=10 })
            @Html.ValidationMessageFor(x => x.Annotation)
            <br />
			@Html.LabelFor(x => x.AuthorEmail, SideNotes.Resources.BookAdmin.EditBookFieldLabelAuthorEmail)
			@Html.TextBoxFor(x => x.AuthorEmail, new { value = Model.AuthorEmail })
            @Html.ValidationMessageFor(x => x.AuthorEmail)
            <br />
			@Html.LabelFor(x => x.HashTag, SideNotes.Resources.BookAdmin.EditBookFieldLabelHashTag)
			@Html.TextBoxFor(x => x.HashTag, new { value = Model.HashTag })
            @Html.ValidationMessageFor(x => x.HashTag)
            <br />
            @Html.LabelFor(x => x.PropertyStatus, SideNotes.Resources.BookAdmin.EditBookFieldLabelPropertyStatus)
            <select name="PropertyStatus">
                <option value="@((int) PropertyStatus.Public)" @(Model.PropertyStatus == (int)PropertyStatus.Public ? "selected='selected'" : "")>@SideNotes.Resources.BookAdmin.EditBookPropertyStatusOptionPublic</option>
                <option value="@((int) PropertyStatus.Donatable)" @(Model.PropertyStatus == (int)PropertyStatus.Donatable ? "selected='selected'" : "")>@SideNotes.Resources.BookAdmin.EditBookPropertyStatusOptionDonatable</option>
                <option value="@((int) PropertyStatus.Private)" @(Model.PropertyStatus == (int)PropertyStatus.Private ? "selected='selected'" : "")>@SideNotes.Resources.BookAdmin.EditBookPropertyStatusOptionPrivate</option>
            </select>
            <br />
            @Html.LabelFor(x => x.CustomStyles, @SideNotes.Resources.BookAdmin.EditBookFieldLabelCustomStyles)
			@Html.TextAreaFor(x => x.CustomStyles, new { value = Model.CustomStyles, cols = 50, rows = 10 })
            @Html.ValidationMessageFor(x => x.CustomStyles)
            <br />
            @Html.LabelFor(x => x.DonationMessage, @SideNotes.Resources.BookAdmin.EditBookFieldLabelDonationMessage)
			@Html.TextAreaFor(x => x.DonationMessage, new { value = Model.DonationMessage, cols = 50, rows = 10 })
            @Html.ValidationMessageFor(x => x.DonationMessage)
            <br />
            @Html.LabelFor(x => x.DonationForm, @SideNotes.Resources.BookAdmin.EditBookFieldLabelDonationForm)
			@Html.TextAreaFor(x => x.DonationForm, new { value = Model.DonationForm, cols = 50, rows = 10 })
            @Html.ValidationMessageFor(x => x.DonationForm)
            <br />
            @Html.LabelFor(x => x.Keywords, @SideNotes.Resources.BookAdmin.EditBookFieldLabelKeywords)
			@Html.TextAreaFor(x => x.Keywords, new { value = Model.Keywords, cols = 50, rows = 10 })
            @Html.ValidationMessageFor(x => x.Keywords)
            <br />
            @Html.LabelFor(x => x.Description, @SideNotes.Resources.BookAdmin.EditBookFieldLabelDescription)
			@Html.TextAreaFor(x => x.Description, new { value = Model.Description, cols = 50, rows = 10 })
            @Html.ValidationMessageFor(x => x.Description)

            <br />
		</fieldset>
		<div id="errorMessage" class="errorMessage"></div>
		@Html.SubmitButton(null, SideNotes.Resources.BookAdmin.EditBookSubmitButtonText, new { @class = "submitButton" })
  }
  <br/>
  <br/>
  <h2>@SideNotes.Resources.BookAdmin.EditBookChooseAvatarHeading</h2>
  <br/>
  <form method="post" action="@Url.Action("SetAvatar", "BookAdmin")" enctype="multipart/form-data">
    <input type="hidden" name="Id" value="@Model.Id"/>
    <input type="file" name="file" />
    <input type="submit" value="@SideNotes.Resources.BookAdmin.EditBookChooseAvatarSubmitButtonText" />
</form>

  <br/>
  <br/>

  <h2>@SideNotes.Resources.BookAdmin.EditBookCatalogFoldersHeading</h2>
  
  @Html.Action("ManageBookCategories", "Catalog", new { BookId = Model.Id })
  </div>