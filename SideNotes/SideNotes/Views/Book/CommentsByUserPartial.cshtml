@model Tuple<User, Dictionary<IComment, Paragraph>>
@{
    Layout = null;
}

<h2>@SideNotes.Resources.Book.CommentsByUserHeading @Model.Item1.Name</h2>
@if (Model.Item2.Count > 0)
{
    foreach (var kvp in Model.Item2.OrderByDescending(e => e.Key.DateCreated))
    {
        var comment = kvp.Key;
        var paragraph = kvp.Value;
      
    <div class="commentContainer commentContainerStyle" >
        <div class="comment">
            <div class="commentAuthor">
                <a href="@Url.Action("View", "User", new { Id = comment.Author.Id })" class="commentAuthorLinkStyle">
                    @UserAvatar.Small(Model.Item1, "user_avatar")
                    <span class="commentAuthorName">@Model.Item1.Name</span>
                </a>
            </div>
            <span class="commentDate">@comment.DateCreated.ToString("yyyy MMM dd hh:mm")</span>
            <br/>
            <span class="commentContent">@comment.Text</span>
        </div>
        @if (comment is HeadComment)
        {
                @Html.ActionLink(SideNotes.Resources.Book.CommentsByUserReadFromHereLinkText, "View", "Book",
                    new { Id = paragraph.Book_Id, skip = paragraph.OrderNumber - 1 }, new {@class="toTextButtonLink" })
        }
        else if (comment is Comment)
        {
            var comm = comment as Comment;
                @Html.ActionLink(SideNotes.Resources.Book.CommentsByUserOpenBranchLinkText, "CommentsThread", "Book", new { headCommentId = comm.HeadCommentId }, null);
        }
        
     </div>
    }
<script type="text/javascript">
    $('.commentContainer:even').addClass('commentContainerAlterStyle');
</script>
}
else
{
    <span>@SideNotes.Resources.Book.CommentsByUserNoCommentsMessage</span>
}